[tool.poetry]
name = "AYON"
version = "1.3.1"
package-mode = false
description = "Open VFX and Animation pipeline with support."
authors = ["Ynput s.r.o. <info@ynput.io>"]
license = "MIT License"
homepage = "https://ynput.io"
documentation = "https://ayon.ynput.io"
repository = "https://github.com/ynput/ayon-launcher"
readme = "README.md"
keywords = ["Pipeline", "AYON", "Avalon", "VFX", "animation", "automation", "tracking", "asset management"]
packages = [
    {include = "tools"},
    {include = "start.py"},
    {include = "LICENSE"},
    {include = "README.md"},
    {include = "setup.py"},
    {include = "pyproject.toml"},
    {include = "poetry.lock"}
]

[tool.poetry.scripts]
ayon = "start:boot"

[tool.poetry.dependencies]
python = ">=3.9.1,<3.10"
# ayon python api
ayon-python-api = "1.1.1"
arrow = "^0.17"
Unidecode = "^1.2.0"
aiohttp = "^3.7"
# local settings
appdirs = { git = "https://github.com/ActiveState/appdirs.git", branch = "master" }
platformdirs = "*"
coolname = "*"
keyring = "^22.0.1"
# environment variables resolving
acre = { git = "https://github.com/pypeclub/acre.git" }
# terminal formatting
blessed = "^1.17"  # Use only in helper scripts
enlighten = "^1.9.0"
# requirements
cryptography = "39.0.0"
dnspython = "^2.1.0"
urllib3 = "1.26.16"
semver = "^2.13.0"
QtPy = "^2.3.0"
pywin32 = { version = "301", markers = "sys_platform == 'win32'" }
python3-xlib = { version="*", markers = "sys_platform == 'linux'"}
distro = { version="^1.9.0", markers = "sys_platform == 'linux'"}
pip = "24.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0"
autopep8 = "^2.0"
coverage = "*"
# cx_freeze is frozen to this version because of the Centos 7 support
# newer versions are using `patchelf` version which is not
# available on Centos 7
cx_freeze = "6.12.0"
# this is here because of the bug in cx_freeze, fixed in cx_freeze 7
# see https://github.com/ynput/ayon-launcher/issues/114
lief = "<0.14"
GitPython = "^3.1.17"
jedi = "^0.13"
Jinja2 = "^3"
markupsafe = "2.0.1"
pycodestyle = "*"
pydocstyle = "*"
linkify-it-py = "^2.0.0"
myst-parser = "^0.18.1"
pylint = "^2.4.4"
pytest = "^6.1"
pytest-cov = "*"
pytest-print = "*"
wheel = "*"
enlighten = "*"  # cool terminal progress bars
toml = "^0.10.2" # for parsing pyproject.toml
pre-commit = "*"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ynput/ayon-launcher/issues"
"Discussions" = "https://github.com/ynput/ayon-launcher/discussions"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[ayon]
# note: in here we can use pip version specifiers as this is installed with pip until
# Poetry will support custom location (-t flag for pip)
# https://pip.pypa.io/en/stable/cli/pip_install/#requirement-specifiers
[ayon.qtbinding.windows]
package = "PySide6"
version = "6.7.1"

[ayon.qtbinding.darwin]
package = "PySide6"
version = "6.7.1"

[ayon.qtbinding.linux]
package = "PySide6"
version = "6.7.1"

[ayon.qtbinding.centos7]
package = "PySide2"
version = "5.15.2"

[ayon.qtbinding.pyside2]
package = "PySide2"
version = "5.15.2"

[tool.pyright]
include = [
    "vendor"
]
exclude = [
    "**/node_modules",
    "**/__pycache__"
]
ignore = [".git"]

reportMissingImports = true
reportMissingTypeStubs = false
